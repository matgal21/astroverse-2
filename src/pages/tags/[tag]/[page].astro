---
import { getCollection } from "astro:content";
import BaseLayout from "@layouts/BaseLayout.astro";
import PostCard from "@components/CommonCard.astro";
import Pagination from "@components/Pagination.astro";
import { getTagMetadata } from "@consts";
import TagsLayout from "@layouts/TagsLayout.astro";

export async function getStaticPaths() {
  const allPosts = await getCollection("posts");
  const uniqueTags = [
    ...new Set(allPosts.map((post) => post.data.tags).flat()),
  ];

  return uniqueTags.flatMap((tag) => {
    const filteredPosts = allPosts.filter((post) =>
      post.data.tags.includes(tag),
    );
    filteredPosts.sort(
      (a, b) =>
        new Date(b.data.pubDate).valueOf() - new Date(a.data.pubDate).valueOf(),
    );

    const pageSize = 12;
    const totalPages = Math.ceil(filteredPosts.length / pageSize);

    return Array.from({ length: totalPages }, (_, index) => ({
      params: { tag, page: (index + 1).toString() },
      props: {
        page: {
          data: filteredPosts.slice(index * pageSize, (index + 1) * pageSize),
          currentPage: index + 1,
          lastPage: totalPages,
        },
      },
    }));
  });
}

const params = Astro.params;
const post = Astro.props;
const { page } = Astro.props;
const { title, description } = getTagMetadata(params.tag);
---

<TagsLayout title={title} description={description}>
  <h1 class="text-4xl mt-4 mb-4 font-medium">Posts sobre <span class="text-sky-600 font-bold">{params.tag}</span>...</h1>
  <div class="grid grid-cols-1 gap-4 md:grid-cols-2 lg:grid-cols-2 text-xl mt-4">
    {page.data.map((post) => <PostCard post={post} />)}
  </div>

  <Pagination
    currentPage={page.currentPage}
    lastPage={page.lastPage}
    urlPrev={page.currentPage > 1
      ? `/tags/${params.tag}/${page.currentPage - 1}`
      : null}
    urlNext={page.currentPage < page.lastPage
      ? `/tags/${params.tag}/${page.currentPage + 1}`
      : null}
    basePath={`/tags/${params.tag}`}
    maxDisplayedPages={5}
  />
</TagsLayout>
