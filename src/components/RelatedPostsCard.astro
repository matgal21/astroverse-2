---
import { getCollection } from "astro:content";
import type { CollectionEntry } from "astro:content";
import OptimizedCover from "@components/OptimizedPicture.astro";
import FormattedDate from "@components/FormattedDate.astro";

const { currentCategory, currentSlug } = Astro.props;

async function getRelatedArticlesByCategory(): Promise<
  CollectionEntry<"posts">[]
> {
  const allPosts = await getCollection("posts");
  return allPosts
    .filter(
      (post) =>
        post.data.category.includes(currentCategory) &&
        post.slug !== currentSlug,
    )
    .sort(
      (a, b) =>
        new Date(b.data.pubDate).valueOf() - new Date(a.data.pubDate).valueOf(),
    )
    .slice(0, 3);
}

const relatedPosts = await getRelatedArticlesByCategory();
---
<div class="bg-gray-300 mx-auto p-4">
  <h2 class="font-bold text-xl p-2 mb-4 shadow-md bg-slate-400 rounded w-72">Posteos relacionados...   ↘️</h2>
  <div class="grid grid-cols-1 gap-4 md:grid-cols-3">
    {
      relatedPosts.map((post) => (
        <div class="relative mb-4 overflow-hidden bg-white hover:bg-blue-400 hover:text-white transition-transform duration-500 hover:opacity-90 hover:-translate-y-1 hover:scale-105 dark:bg-neutral-900 dark:text-white">
          <a href={`/posts/${post.slug}/`} title={post.id}>
          <img src={post.data.cover} alt={post.data.coverAlt} hover:text-white/>
            <div class=" bottom-0 end-0 start-0 p-4 md:p-5">
              <h2 class="mt-0 text-lg font-bold text-black hover:text-white">{post.data.title}</h2>
              <h4 class="mt-2 text-xs font-medium text-black hover:text-white">{post.data.description}</h4>
              <div class="mt-4 flex items-center gap-4 text-xs text-orange-600 justify-end hover:text-white">
                <span class="p-2 font-bold">{post.data.tags.join(" ")}</span>
              </div>
                <FormattedDate date={post.data.pubDate}/>
            </div>
          </a>
        </div>
      ))
    }
  </div>
</div>