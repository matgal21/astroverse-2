---
import { getCollection } from "astro:content";
import type { CollectionEntry } from "astro:content";
import OptimizedCover from "@components/OptimizedPicture.astro";
import FormattedDate from "@components/FormattedDate.astro";

const { currentCategory, currentSlug } = Astro.props;

async function getRelatedArticlesByCategory(): Promise<
  CollectionEntry<"posts">[]
> {
  const allPosts = await getCollection("posts");
  return allPosts
    .filter(
      (post) =>
        post.data.category.includes(currentCategory) &&
        post.slug !== currentSlug,
    )
    .sort(
      (a, b) =>
        new Date(b.data.pubDate).valueOf() - new Date(a.data.pubDate).valueOf(),
    )
    .slice(0, 3);
}

const relatedPosts = await getRelatedArticlesByCategory();
---

<h1 class="font-bold text-xl mb-4 shadow-md">Posteos relacionados...</h1>
<div class="grid grid-cols-1 gap-4 md:grid-cols-3">
  {
    relatedPosts.map((post) => (
      <div class="relative mb-4 overflow-hidden bg-white transition-transform duration-500 hover:opacity-90 hover:-translate-y-1 hover:scale-105 dark:bg-neutral-900">
        <a href={`/posts/${post.slug}/`}>
        <img src={post.data.cover} alt={post.data.coverAlt} />
          <div class=" bottom-0 end-0 start-0 bg-gray-300 p-4 md:p-5">
            <h2 class="mt-0 text-lg font-bold text-black">{post.data.title}</h2>
            <h4 class="mt-2 text-xs font-bold text-black">{post.data.description}</h4>
            <div class="mt-4 flex items-center gap-4 text-xs text-black">
              <span class="bg-white">{post.data.tags.join(" ")}</span>
            </div>
          </div>
        </a>
      </div>
    ))
  }
</div>